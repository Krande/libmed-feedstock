Subject: [PATCH] py313 support
---
Index: python/med_enum_typemap.i
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/python/med_enum_typemap.i b/python/med_enum_typemap.i
--- a/python/med_enum_typemap.i	(revision eb503b7edede89edeb14bb4da1b68404a7de1915)
+++ b/python/med_enum_typemap.i	(date 1734255259967)
@@ -109,7 +109,7 @@
   if (pclass == NULL) printf("%s\n","Can't get class $1_basetype");
   Py_DECREF(pmod);
   pargs  = Py_BuildValue("(i)",*$1);
-  pinst  = PyEval_CallObject(pclass, pargs);
+  pinst  = PyObject_Call(pclass, pargs, NULL);
   if (pinst == NULL) printf("%s\n","Can't instanciate class $1_basetype");
   $result=SWIG_Python_AppendOutput($result, pinst);
 }
Index: python/medsubdomain_int_wrap.cc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/python/medsubdomain_int_wrap.cc b/python/medsubdomain_int_wrap.cc
--- a/python/medsubdomain_int_wrap.cc	(revision eb503b7edede89edeb14bb4da1b68404a7de1915)
+++ b/python/medsubdomain_int_wrap.cc	(date 1734255251840)
@@ -23155,7 +23155,7 @@
     if (pclass == NULL) printf("%s\n","Can't get class med_entity_type");
     Py_DECREF(pmod);
     pargs  = Py_BuildValue("(i)",*arg7);
-    pinst  = PyEval_CallObject(pclass, pargs);
+    pinst  = PyObject_Call(pclass, pargs, NULL);
     if (pinst == NULL) printf("%s\n","Can't instanciate class med_entity_type");
     resultobj=SWIG_Python_AppendOutput(resultobj, pinst);
   }
@@ -23178,7 +23178,7 @@
     if (pclass == NULL) printf("%s\n","Can't get class med_entity_type");
     Py_DECREF(pmod);
     pargs  = Py_BuildValue("(i)",*arg9);
-    pinst  = PyEval_CallObject(pclass, pargs);
+    pinst  = PyObject_Call(pclass, pargs, NULL);
     if (pinst == NULL) printf("%s\n","Can't instanciate class med_entity_type");
     resultobj=SWIG_Python_AppendOutput(resultobj, pinst);
   }
Index: python/medstructelement_long_wrap.cc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/python/medstructelement_long_wrap.cc b/python/medstructelement_long_wrap.cc
--- a/python/medstructelement_long_wrap.cc	(revision eb503b7edede89edeb14bb4da1b68404a7de1915)
+++ b/python/medstructelement_long_wrap.cc	(date 1734255259174)
@@ -22960,7 +22960,7 @@
     if (pclass == NULL) printf("%s\n","Can't get class med_entity_type");
     Py_DECREF(pmod);
     pargs  = Py_BuildValue("(i)",*arg6);
-    pinst  = PyEval_CallObject(pclass, pargs);
+    pinst  = PyObject_Call(pclass, pargs, NULL);
     if (pinst == NULL) printf("%s\n","Can't instanciate class med_entity_type");
     resultobj=SWIG_Python_AppendOutput(resultobj, pinst);
   }
@@ -23175,7 +23175,7 @@
     if (pclass == NULL) printf("%s\n","Can't get class med_entity_type");
     Py_DECREF(pmod);
     pargs  = Py_BuildValue("(i)",*arg7);
-    pinst  = PyEval_CallObject(pclass, pargs);
+    pinst  = PyObject_Call(pclass, pargs, NULL);
     if (pinst == NULL) printf("%s\n","Can't instanciate class med_entity_type");
     resultobj=SWIG_Python_AppendOutput(resultobj, pinst);
   }
@@ -23358,7 +23358,7 @@
     if (pclass == NULL) printf("%s\n","Can't get class med_attribute_type");
     Py_DECREF(pmod);
     pargs  = Py_BuildValue("(i)",*arg4);
-    pinst  = PyEval_CallObject(pclass, pargs);
+    pinst  = PyObject_Call(pclass, pargs, NULL);
     if (pinst == NULL) printf("%s\n","Can't instanciate class med_attribute_type");
     resultobj=SWIG_Python_AppendOutput(resultobj, pinst);
   }
@@ -23381,7 +23381,7 @@
     if (pclass == NULL) printf("%s\n","Can't get class med_entity_type");
     Py_DECREF(pmod);
     pargs  = Py_BuildValue("(i)",*arg6);
-    pinst  = PyEval_CallObject(pclass, pargs);
+    pinst  = PyObject_Call(pclass, pargs, NULL);
     if (pinst == NULL) printf("%s\n","Can't instanciate class med_entity_type");
     resultobj=SWIG_Python_AppendOutput(resultobj, pinst);
   }
@@ -23519,7 +23519,7 @@
     if (pclass == NULL) printf("%s\n","Can't get class med_attribute_type");
     Py_DECREF(pmod);
     pargs  = Py_BuildValue("(i)",*arg5);
-    pinst  = PyEval_CallObject(pclass, pargs);
+    pinst  = PyObject_Call(pclass, pargs, NULL);
     if (pinst == NULL) printf("%s\n","Can't instanciate class med_attribute_type");
     resultobj=SWIG_Python_AppendOutput(resultobj, pinst);
   }
@@ -23542,7 +23542,7 @@
     if (pclass == NULL) printf("%s\n","Can't get class med_entity_type");
     Py_DECREF(pmod);
     pargs  = Py_BuildValue("(i)",*arg7);
-    pinst  = PyEval_CallObject(pclass, pargs);
+    pinst  = PyObject_Call(pclass, pargs, NULL);
     if (pinst == NULL) printf("%s\n","Can't instanciate class med_entity_type");
     resultobj=SWIG_Python_AppendOutput(resultobj, pinst);
   }
@@ -23842,7 +23842,7 @@
     if (pclass == NULL) printf("%s\n","Can't get class med_attribute_type");
     Py_DECREF(pmod);
     pargs  = Py_BuildValue("(i)",*arg4);
-    pinst  = PyEval_CallObject(pclass, pargs);
+    pinst  = PyObject_Call(pclass, pargs, NULL);
     if (pinst == NULL) printf("%s\n","Can't instanciate class med_attribute_type");
     resultobj=SWIG_Python_AppendOutput(resultobj, pinst);
   }
@@ -23953,7 +23953,7 @@
     if (pclass == NULL) printf("%s\n","Can't get class med_attribute_type");
     Py_DECREF(pmod);
     pargs  = Py_BuildValue("(i)",*arg5);
-    pinst  = PyEval_CallObject(pclass, pargs);
+    pinst  = PyObject_Call(pclass, pargs, NULL);
     if (pinst == NULL) printf("%s\n","Can't instanciate class med_attribute_type");
     resultobj=SWIG_Python_AppendOutput(resultobj, pinst);
   }
Index: python/medfield_long_wrap.cc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/python/medfield_long_wrap.cc b/python/medfield_long_wrap.cc
--- a/python/medfield_long_wrap.cc	(revision eb503b7edede89edeb14bb4da1b68404a7de1915)
+++ b/python/medfield_long_wrap.cc	(date 1734255251012)
@@ -24036,7 +24036,7 @@
     if (pclass == NULL) printf("%s\n","Can't get class med_field_type");
     Py_DECREF(pmod);
     pargs  = Py_BuildValue("(i)",*arg6);
-    pinst  = PyEval_CallObject(pclass, pargs);
+    pinst  = PyObject_Call(pclass, pargs, NULL);
     if (pinst == NULL) printf("%s\n","Can't instanciate class med_field_type");
     resultobj=SWIG_Python_AppendOutput(resultobj, pinst);
   }
@@ -24699,7 +24699,7 @@
     if (pclass == NULL) printf("%s\n","Can't get class med_field_type");
     Py_DECREF(pmod);
     pargs  = Py_BuildValue("(i)",*arg5);
-    pinst  = PyEval_CallObject(pclass, pargs);
+    pinst  = PyObject_Call(pclass, pargs, NULL);
     if (pinst == NULL) printf("%s\n","Can't instanciate class med_field_type");
     resultobj=SWIG_Python_AppendOutput(resultobj, pinst);
   }
@@ -25815,7 +25815,7 @@
     if (pclass == NULL) printf("%s\n","Can't get class med_entity_type");
     Py_DECREF(pmod);
     pargs  = Py_BuildValue("(i)",*arg5);
-    pinst  = PyEval_CallObject(pclass, pargs);
+    pinst  = PyObject_Call(pclass, pargs, NULL);
     if (pinst == NULL) printf("%s\n","Can't instanciate class med_entity_type");
     resultobj=SWIG_Python_AppendOutput(resultobj, pinst);
   }
Index: python/medstructelement_int_wrap.cc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/python/medstructelement_int_wrap.cc b/python/medstructelement_int_wrap.cc
--- a/python/medstructelement_int_wrap.cc	(revision eb503b7edede89edeb14bb4da1b68404a7de1915)
+++ b/python/medstructelement_int_wrap.cc	(date 1734255254040)
@@ -22960,7 +22960,7 @@
     if (pclass == NULL) printf("%s\n","Can't get class med_entity_type");
     Py_DECREF(pmod);
     pargs  = Py_BuildValue("(i)",*arg6);
-    pinst  = PyEval_CallObject(pclass, pargs);
+    pinst  = PyObject_Call(pclass, pargs, NULL);
     if (pinst == NULL) printf("%s\n","Can't instanciate class med_entity_type");
     resultobj=SWIG_Python_AppendOutput(resultobj, pinst);
   }
@@ -23175,7 +23175,7 @@
     if (pclass == NULL) printf("%s\n","Can't get class med_entity_type");
     Py_DECREF(pmod);
     pargs  = Py_BuildValue("(i)",*arg7);
-    pinst  = PyEval_CallObject(pclass, pargs);
+    pinst  = PyObject_Call(pclass, pargs, NULL);
     if (pinst == NULL) printf("%s\n","Can't instanciate class med_entity_type");
     resultobj=SWIG_Python_AppendOutput(resultobj, pinst);
   }
@@ -23358,7 +23358,7 @@
     if (pclass == NULL) printf("%s\n","Can't get class med_attribute_type");
     Py_DECREF(pmod);
     pargs  = Py_BuildValue("(i)",*arg4);
-    pinst  = PyEval_CallObject(pclass, pargs);
+    pinst  = PyObject_Call(pclass, pargs, NULL);
     if (pinst == NULL) printf("%s\n","Can't instanciate class med_attribute_type");
     resultobj=SWIG_Python_AppendOutput(resultobj, pinst);
   }
@@ -23381,7 +23381,7 @@
     if (pclass == NULL) printf("%s\n","Can't get class med_entity_type");
     Py_DECREF(pmod);
     pargs  = Py_BuildValue("(i)",*arg6);
-    pinst  = PyEval_CallObject(pclass, pargs);
+    pinst  = PyObject_Call(pclass, pargs, NULL);
     if (pinst == NULL) printf("%s\n","Can't instanciate class med_entity_type");
     resultobj=SWIG_Python_AppendOutput(resultobj, pinst);
   }
@@ -23519,7 +23519,7 @@
     if (pclass == NULL) printf("%s\n","Can't get class med_attribute_type");
     Py_DECREF(pmod);
     pargs  = Py_BuildValue("(i)",*arg5);
-    pinst  = PyEval_CallObject(pclass, pargs);
+    pinst  = PyObject_Call(pclass, pargs, NULL);
     if (pinst == NULL) printf("%s\n","Can't instanciate class med_attribute_type");
     resultobj=SWIG_Python_AppendOutput(resultobj, pinst);
   }
@@ -23542,7 +23542,7 @@
     if (pclass == NULL) printf("%s\n","Can't get class med_entity_type");
     Py_DECREF(pmod);
     pargs  = Py_BuildValue("(i)",*arg7);
-    pinst  = PyEval_CallObject(pclass, pargs);
+    pinst  = PyObject_Call(pclass, pargs, NULL);
     if (pinst == NULL) printf("%s\n","Can't instanciate class med_entity_type");
     resultobj=SWIG_Python_AppendOutput(resultobj, pinst);
   }
@@ -23842,7 +23842,7 @@
     if (pclass == NULL) printf("%s\n","Can't get class med_attribute_type");
     Py_DECREF(pmod);
     pargs  = Py_BuildValue("(i)",*arg4);
-    pinst  = PyEval_CallObject(pclass, pargs);
+    pinst  = PyObject_Call(pclass, pargs, NULL);
     if (pinst == NULL) printf("%s\n","Can't instanciate class med_attribute_type");
     resultobj=SWIG_Python_AppendOutput(resultobj, pinst);
   }
@@ -23953,7 +23953,7 @@
     if (pclass == NULL) printf("%s\n","Can't get class med_attribute_type");
     Py_DECREF(pmod);
     pargs  = Py_BuildValue("(i)",*arg5);
-    pinst  = PyEval_CallObject(pclass, pargs);
+    pinst  = PyObject_Call(pclass, pargs, NULL);
     if (pinst == NULL) printf("%s\n","Can't instanciate class med_attribute_type");
     resultobj=SWIG_Python_AppendOutput(resultobj, pinst);
   }
Index: python/medfield_int_wrap.cc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/python/medfield_int_wrap.cc b/python/medfield_int_wrap.cc
--- a/python/medfield_int_wrap.cc	(revision eb503b7edede89edeb14bb4da1b68404a7de1915)
+++ b/python/medfield_int_wrap.cc	(date 1734255259959)
@@ -24036,7 +24036,7 @@
     if (pclass == NULL) printf("%s\n","Can't get class med_field_type");
     Py_DECREF(pmod);
     pargs  = Py_BuildValue("(i)",*arg6);
-    pinst  = PyEval_CallObject(pclass, pargs);
+    pinst  = PyObject_Call(pclass, pargs, NULL);
     if (pinst == NULL) printf("%s\n","Can't instanciate class med_field_type");
     resultobj=SWIG_Python_AppendOutput(resultobj, pinst);
   }
@@ -24699,7 +24699,7 @@
     if (pclass == NULL) printf("%s\n","Can't get class med_field_type");
     Py_DECREF(pmod);
     pargs  = Py_BuildValue("(i)",*arg5);
-    pinst  = PyEval_CallObject(pclass, pargs);
+    pinst  = PyObject_Call(pclass, pargs, NULL);
     if (pinst == NULL) printf("%s\n","Can't instanciate class med_field_type");
     resultobj=SWIG_Python_AppendOutput(resultobj, pinst);
   }
@@ -25815,7 +25815,7 @@
     if (pclass == NULL) printf("%s\n","Can't get class med_entity_type");
     Py_DECREF(pmod);
     pargs  = Py_BuildValue("(i)",*arg5);
-    pinst  = PyEval_CallObject(pclass, pargs);
+    pinst  = PyObject_Call(pclass, pargs, NULL);
     if (pinst == NULL) printf("%s\n","Can't instanciate class med_entity_type");
     resultobj=SWIG_Python_AppendOutput(resultobj, pinst);
   }
Index: python/med_enumtest_typemap.i
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/python/med_enumtest_typemap.i b/python/med_enumtest_typemap.i
--- a/python/med_enumtest_typemap.i	(revision eb503b7edede89edeb14bb4da1b68404a7de1915)
+++ b/python/med_enumtest_typemap.i	(date 1734255259182)
@@ -128,7 +128,7 @@
   if (pclass == NULL) printf("%s\n","Can't get class $1_basetype");
   Py_DECREF(pmod);
   pargs  = Py_BuildValue("(i)",*$1);
-  pinst  = PyEval_CallObject(pclass, pargs);
+  pinst  = PyObject_Call(pclass, pargs, NULL);
   if (pinst == NULL) printf("%s\n","Can't instanciate class $1_basetype");
   $result=SWIG_Python_AppendOutput($result, pinst);
 }
Index: python/medsubdomain_long_wrap.cc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/python/medsubdomain_long_wrap.cc b/python/medsubdomain_long_wrap.cc
--- a/python/medsubdomain_long_wrap.cc	(revision eb503b7edede89edeb14bb4da1b68404a7de1915)
+++ b/python/medsubdomain_long_wrap.cc	(date 1734254492333)
@@ -23155,7 +23155,7 @@
     if (pclass == NULL) printf("%s\n","Can't get class med_entity_type");
     Py_DECREF(pmod);
     pargs  = Py_BuildValue("(i)",*arg7);
-    pinst  = PyEval_CallObject(pclass, pargs);
+    pinst  = PyObject_Call(pclass, pargs);
     if (pinst == NULL) printf("%s\n","Can't instanciate class med_entity_type");
     resultobj=SWIG_Python_AppendOutput(resultobj, pinst);
   }
@@ -23178,7 +23178,7 @@
     if (pclass == NULL) printf("%s\n","Can't get class med_entity_type");
     Py_DECREF(pmod);
     pargs  = Py_BuildValue("(i)",*arg9);
-    pinst  = PyEval_CallObject(pclass, pargs);
+    pinst  = PyObject_Call(pclass, pargs);
     if (pinst == NULL) printf("%s\n","Can't instanciate class med_entity_type");
     resultobj=SWIG_Python_AppendOutput(resultobj, pinst);
   }
Index: python/medmesh_int_wrap.cc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/python/medmesh_int_wrap.cc b/python/medmesh_int_wrap.cc
--- a/python/medmesh_int_wrap.cc	(revision eb503b7edede89edeb14bb4da1b68404a7de1915)
+++ b/python/medmesh_int_wrap.cc	(date 1734255258405)
@@ -22757,7 +22757,7 @@
     if (pclass == NULL) printf("%s\n","Can't get class med_mesh_type");
     Py_DECREF(pmod);
     pargs  = Py_BuildValue("(i)",*arg5);
-    pinst  = PyEval_CallObject(pclass, pargs);
+    pinst  = PyObject_Call(pclass, pargs, NULL);
     if (pinst == NULL) printf("%s\n","Can't instanciate class med_mesh_type");
     resultobj=SWIG_Python_AppendOutput(resultobj, pinst);
   }
@@ -22778,7 +22778,7 @@
     if (pclass == NULL) printf("%s\n","Can't get class med_sorting_type");
     Py_DECREF(pmod);
     pargs  = Py_BuildValue("(i)",*arg8);
-    pinst  = PyEval_CallObject(pclass, pargs);
+    pinst  = PyObject_Call(pclass, pargs, NULL);
     if (pinst == NULL) printf("%s\n","Can't instanciate class med_sorting_type");
     resultobj=SWIG_Python_AppendOutput(resultobj, pinst);
   }
@@ -22801,7 +22801,7 @@
     if (pclass == NULL) printf("%s\n","Can't get class med_axis_type");
     Py_DECREF(pmod);
     pargs  = Py_BuildValue("(i)",*arg10);
-    pinst  = PyEval_CallObject(pclass, pargs);
+    pinst  = PyObject_Call(pclass, pargs, NULL);
     if (pinst == NULL) printf("%s\n","Can't instanciate class med_axis_type");
     resultobj=SWIG_Python_AppendOutput(resultobj, pinst);
   }
@@ -22947,7 +22947,7 @@
     if (pclass == NULL) printf("%s\n","Can't get class med_mesh_type");
     Py_DECREF(pmod);
     pargs  = Py_BuildValue("(i)",*arg6);
-    pinst  = PyEval_CallObject(pclass, pargs);
+    pinst  = PyObject_Call(pclass, pargs, NULL);
     if (pinst == NULL) printf("%s\n","Can't instanciate class med_mesh_type");
     resultobj=SWIG_Python_AppendOutput(resultobj, pinst);
   }
@@ -22968,7 +22968,7 @@
     if (pclass == NULL) printf("%s\n","Can't get class med_sorting_type");
     Py_DECREF(pmod);
     pargs  = Py_BuildValue("(i)",*arg9);
-    pinst  = PyEval_CallObject(pclass, pargs);
+    pinst  = PyObject_Call(pclass, pargs, NULL);
     if (pinst == NULL) printf("%s\n","Can't instanciate class med_sorting_type");
     resultobj=SWIG_Python_AppendOutput(resultobj, pinst);
   }
@@ -22991,7 +22991,7 @@
     if (pclass == NULL) printf("%s\n","Can't get class med_axis_type");
     Py_DECREF(pmod);
     pargs  = Py_BuildValue("(i)",*arg11);
-    pinst  = PyEval_CallObject(pclass, pargs);
+    pinst  = PyObject_Call(pclass, pargs, NULL);
     if (pinst == NULL) printf("%s\n","Can't instanciate class med_axis_type");
     resultobj=SWIG_Python_AppendOutput(resultobj, pinst);
   }
@@ -23281,7 +23281,7 @@
     if (pclass == NULL) printf("%s\n","Can't get class med_grid_type");
     Py_DECREF(pmod);
     pargs  = Py_BuildValue("(i)",*arg3);
-    pinst  = PyEval_CallObject(pclass, pargs);
+    pinst  = PyObject_Call(pclass, pargs, NULL);
     if (pinst == NULL) printf("%s\n","Can't instanciate class med_grid_type");
     resultobj=SWIG_Python_AppendOutput(resultobj, pinst);
   }
@@ -24336,7 +24336,7 @@
     if (pclass == NULL) printf("%s\n","Can't get class med_sorting_type");
     Py_DECREF(pmod);
     pargs  = Py_BuildValue("(i)",*arg3);
-    pinst  = PyEval_CallObject(pclass, pargs);
+    pinst  = PyObject_Call(pclass, pargs, NULL);
     if (pinst == NULL) printf("%s\n","Can't instanciate class med_sorting_type");
     resultobj=SWIG_Python_AppendOutput(resultobj, pinst);
   }
@@ -29667,7 +29667,7 @@
     if (pclass == NULL) printf("%s\n","Can't get class med_axis_type");
     Py_DECREF(pmod);
     pargs  = Py_BuildValue("(i)",*arg6);
-    pinst  = PyEval_CallObject(pclass, pargs);
+    pinst  = PyObject_Call(pclass, pargs, NULL);
     if (pinst == NULL) printf("%s\n","Can't instanciate class med_axis_type");
     resultobj=SWIG_Python_AppendOutput(resultobj, pinst);
   }
@@ -29792,7 +29792,7 @@
     if (pclass == NULL) printf("%s\n","Can't get class med_axis_type");
     Py_DECREF(pmod);
     pargs  = Py_BuildValue("(i)",*arg7);
-    pinst  = PyEval_CallObject(pclass, pargs);
+    pinst  = PyObject_Call(pclass, pargs, NULL);
     if (pinst == NULL) printf("%s\n","Can't instanciate class med_axis_type");
     resultobj=SWIG_Python_AppendOutput(resultobj, pinst);
   }
Index: python/medequivalence_long_wrap.cc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/python/medequivalence_long_wrap.cc b/python/medequivalence_long_wrap.cc
--- a/python/medequivalence_long_wrap.cc	(revision eb503b7edede89edeb14bb4da1b68404a7de1915)
+++ b/python/medequivalence_long_wrap.cc	(date 1734255247924)
@@ -23227,7 +23227,7 @@
     if (pclass == NULL) printf("%s\n","Can't get class med_entity_type");
     Py_DECREF(pmod);
     pargs  = Py_BuildValue("(i)",*arg7);
-    pinst  = PyEval_CallObject(pclass, pargs);
+    pinst  = PyObject_Call(pclass, pargs, NULL);
     if (pinst == NULL) printf("%s\n","Can't instanciate class med_entity_type");
     resultobj=SWIG_Python_AppendOutput(resultobj, pinst);
   }
Index: python/medequivalence_int_wrap.cc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/python/medequivalence_int_wrap.cc b/python/medequivalence_int_wrap.cc
--- a/python/medequivalence_int_wrap.cc	(revision eb503b7edede89edeb14bb4da1b68404a7de1915)
+++ b/python/medequivalence_int_wrap.cc	(date 1734255247240)
@@ -23227,7 +23227,7 @@
     if (pclass == NULL) printf("%s\n","Can't get class med_entity_type");
     Py_DECREF(pmod);
     pargs  = Py_BuildValue("(i)",*arg7);
-    pinst  = PyEval_CallObject(pclass, pargs);
+    pinst  = PyObject_Call(pclass, pargs, NULL);
     if (pinst == NULL) printf("%s\n","Can't instanciate class med_entity_type");
     resultobj=SWIG_Python_AppendOutput(resultobj, pinst);
   }
Index: python/medparameter_int_wrap.cc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/python/medparameter_int_wrap.cc b/python/medparameter_int_wrap.cc
--- a/python/medparameter_int_wrap.cc	(revision eb503b7edede89edeb14bb4da1b68404a7de1915)
+++ b/python/medparameter_int_wrap.cc	(date 1734255251825)
@@ -22699,7 +22699,7 @@
     if (pclass == NULL) printf("%s\n","Can't get class med_parameter_type");
     Py_DECREF(pmod);
     pargs  = Py_BuildValue("(i)",*arg4);
-    pinst  = PyEval_CallObject(pclass, pargs);
+    pinst  = PyObject_Call(pclass, pargs, NULL);
     if (pinst == NULL) printf("%s\n","Can't instanciate class med_parameter_type");
     resultobj=SWIG_Python_AppendOutput(resultobj, pinst);
   }
@@ -22798,7 +22798,7 @@
     if (pclass == NULL) printf("%s\n","Can't get class med_parameter_type");
     Py_DECREF(pmod);
     pargs  = Py_BuildValue("(i)",*arg3);
-    pinst  = PyEval_CallObject(pclass, pargs);
+    pinst  = PyObject_Call(pclass, pargs, NULL);
     if (pinst == NULL) printf("%s\n","Can't instanciate class med_parameter_type");
     resultobj=SWIG_Python_AppendOutput(resultobj, pinst);
   }
Index: python/medparameter_long_wrap.cc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/python/medparameter_long_wrap.cc b/python/medparameter_long_wrap.cc
--- a/python/medparameter_long_wrap.cc	(revision eb503b7edede89edeb14bb4da1b68404a7de1915)
+++ b/python/medparameter_long_wrap.cc	(date 1734255255346)
@@ -22699,7 +22699,7 @@
     if (pclass == NULL) printf("%s\n","Can't get class med_parameter_type");
     Py_DECREF(pmod);
     pargs  = Py_BuildValue("(i)",*arg4);
-    pinst  = PyEval_CallObject(pclass, pargs);
+    pinst  = PyObject_Call(pclass, pargs, NULL);
     if (pinst == NULL) printf("%s\n","Can't instanciate class med_parameter_type");
     resultobj=SWIG_Python_AppendOutput(resultobj, pinst);
   }
@@ -22798,7 +22798,7 @@
     if (pclass == NULL) printf("%s\n","Can't get class med_parameter_type");
     Py_DECREF(pmod);
     pargs  = Py_BuildValue("(i)",*arg3);
-    pinst  = PyEval_CallObject(pclass, pargs);
+    pinst  = PyObject_Call(pclass, pargs, NULL);
     if (pinst == NULL) printf("%s\n","Can't instanciate class med_parameter_type");
     resultobj=SWIG_Python_AppendOutput(resultobj, pinst);
   }
Index: python/medmesh_long_wrap.cc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/python/medmesh_long_wrap.cc b/python/medmesh_long_wrap.cc
--- a/python/medmesh_long_wrap.cc	(revision eb503b7edede89edeb14bb4da1b68404a7de1915)
+++ b/python/medmesh_long_wrap.cc	(date 1734255248586)
@@ -22757,7 +22757,7 @@
     if (pclass == NULL) printf("%s\n","Can't get class med_mesh_type");
     Py_DECREF(pmod);
     pargs  = Py_BuildValue("(i)",*arg5);
-    pinst  = PyEval_CallObject(pclass, pargs);
+    pinst  = PyObject_Call(pclass, pargs, NULL);
     if (pinst == NULL) printf("%s\n","Can't instanciate class med_mesh_type");
     resultobj=SWIG_Python_AppendOutput(resultobj, pinst);
   }
@@ -22778,7 +22778,7 @@
     if (pclass == NULL) printf("%s\n","Can't get class med_sorting_type");
     Py_DECREF(pmod);
     pargs  = Py_BuildValue("(i)",*arg8);
-    pinst  = PyEval_CallObject(pclass, pargs);
+    pinst  = PyObject_Call(pclass, pargs, NULL);
     if (pinst == NULL) printf("%s\n","Can't instanciate class med_sorting_type");
     resultobj=SWIG_Python_AppendOutput(resultobj, pinst);
   }
@@ -22801,7 +22801,7 @@
     if (pclass == NULL) printf("%s\n","Can't get class med_axis_type");
     Py_DECREF(pmod);
     pargs  = Py_BuildValue("(i)",*arg10);
-    pinst  = PyEval_CallObject(pclass, pargs);
+    pinst  = PyObject_Call(pclass, pargs, NULL);
     if (pinst == NULL) printf("%s\n","Can't instanciate class med_axis_type");
     resultobj=SWIG_Python_AppendOutput(resultobj, pinst);
   }
@@ -22947,7 +22947,7 @@
     if (pclass == NULL) printf("%s\n","Can't get class med_mesh_type");
     Py_DECREF(pmod);
     pargs  = Py_BuildValue("(i)",*arg6);
-    pinst  = PyEval_CallObject(pclass, pargs);
+    pinst  = PyObject_Call(pclass, pargs, NULL);
     if (pinst == NULL) printf("%s\n","Can't instanciate class med_mesh_type");
     resultobj=SWIG_Python_AppendOutput(resultobj, pinst);
   }
@@ -22968,7 +22968,7 @@
     if (pclass == NULL) printf("%s\n","Can't get class med_sorting_type");
     Py_DECREF(pmod);
     pargs  = Py_BuildValue("(i)",*arg9);
-    pinst  = PyEval_CallObject(pclass, pargs);
+    pinst  = PyObject_Call(pclass, pargs, NULL);
     if (pinst == NULL) printf("%s\n","Can't instanciate class med_sorting_type");
     resultobj=SWIG_Python_AppendOutput(resultobj, pinst);
   }
@@ -22991,7 +22991,7 @@
     if (pclass == NULL) printf("%s\n","Can't get class med_axis_type");
     Py_DECREF(pmod);
     pargs  = Py_BuildValue("(i)",*arg11);
-    pinst  = PyEval_CallObject(pclass, pargs);
+    pinst  = PyObject_Call(pclass, pargs, NULL);
     if (pinst == NULL) printf("%s\n","Can't instanciate class med_axis_type");
     resultobj=SWIG_Python_AppendOutput(resultobj, pinst);
   }
@@ -23281,7 +23281,7 @@
     if (pclass == NULL) printf("%s\n","Can't get class med_grid_type");
     Py_DECREF(pmod);
     pargs  = Py_BuildValue("(i)",*arg3);
-    pinst  = PyEval_CallObject(pclass, pargs);
+    pinst  = PyObject_Call(pclass, pargs, NULL);
     if (pinst == NULL) printf("%s\n","Can't instanciate class med_grid_type");
     resultobj=SWIG_Python_AppendOutput(resultobj, pinst);
   }
@@ -24336,7 +24336,7 @@
     if (pclass == NULL) printf("%s\n","Can't get class med_sorting_type");
     Py_DECREF(pmod);
     pargs  = Py_BuildValue("(i)",*arg3);
-    pinst  = PyEval_CallObject(pclass, pargs);
+    pinst  = PyObject_Call(pclass, pargs, NULL);
     if (pinst == NULL) printf("%s\n","Can't instanciate class med_sorting_type");
     resultobj=SWIG_Python_AppendOutput(resultobj, pinst);
   }
@@ -29667,7 +29667,7 @@
     if (pclass == NULL) printf("%s\n","Can't get class med_axis_type");
     Py_DECREF(pmod);
     pargs  = Py_BuildValue("(i)",*arg6);
-    pinst  = PyEval_CallObject(pclass, pargs);
+    pinst  = PyObject_Call(pclass, pargs, NULL);
     if (pinst == NULL) printf("%s\n","Can't instanciate class med_axis_type");
     resultobj=SWIG_Python_AppendOutput(resultobj, pinst);
   }
@@ -29792,7 +29792,7 @@
     if (pclass == NULL) printf("%s\n","Can't get class med_axis_type");
     Py_DECREF(pmod);
     pargs  = Py_BuildValue("(i)",*arg7);
-    pinst  = PyEval_CallObject(pclass, pargs);
+    pinst  = PyObject_Call(pclass, pargs, NULL);
     if (pinst == NULL) printf("%s\n","Can't instanciate class med_axis_type");
     resultobj=SWIG_Python_AppendOutput(resultobj, pinst);
   }
